// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

enum Units {
  GRAMM
  KILOGRAMM
  MILLILITER
  LITER
  PIECE
  TEASPOON
  TABLESPOON
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)

  Session Session[]

  @@map("user")
}

model Session {
  id               Int       @id @default(autoincrement())
  userId           Int       @map("user_id")
  refreshTokenHash String    @map("refresh_token_hash")
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)

  UserId User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("session")
}

model Dish {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?    @map("image_url")
  mealTypes   MealType[] @map("meal_types")
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?  @updatedAt @map("updated_at") @db.Timestamptz(6)

  Recipe Recipe[]

  @@map("dish")
}

model Ingredient {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?   @map("image_url")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)

  IngredientsOnRecipe IngredientsOnRecipe[]

  @@map("ingredient")
}

model Recipe {
  id          Int       @id @default(autoincrement())
  duration    Int // in seconds
  complexity  Int // 1-5 pro
  portions    Int       @default(1)
  calories    Int
  weight      Int // in grams
  description String
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)
  dishId      Int       @map("dish_id")

  Dish                Dish                  @relation(fields: [dishId], references: [id])
  IngredientsOnRecipe IngredientsOnRecipe[]

  @@map("recipe")
}

model IngredientsOnRecipe {
  recipeId     Int   @map("recipe_id")
  ingredientId Int   @map("ingredient_id")
  size         Float
  units        Units

  recipe     Recipe     @relation(fields: [recipeId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])

  @@id([recipeId, ingredientId])
  @@map("m2m_ingredients_on_recipes")
}
